package enum

import o "github.com/jishaocong0910/go-object"

type _MySqlBinaryOperator struct {
	*o.M_Enum[BinaryOperator]
	JSON_EXTRACT,
	JSON_UNQUOTE,
	MEMBER_OF,
	COLLATE,
	BITWISE_XOR,
	MULTIPLY,
	DIVIDE,
	MODULUS,
	DIV,
	MOD,
	ADD,
	SUBTRACT,
	RIGHT_SHIFT,
	LEFT_SHIFT,
	BITWISE_AND,
	BITWISE_OR,
	EQUAL_OR_ASSIGNMENT,
	LESS_THAN_OR_EQUAL_OR_GREATER_THAN,
	GREATER_THAN,
	LESS_THAN,
	GREATER_THAN_OR_EQUAL,
	LESS_THAN_OR_EQUAL,
	LESS_THAN_OR_GREATER,
	NOT_EQUAL,
	IN,
	NOT_IN,
	IS,
	IS_NOT,
	LIKE,
	NOT_LIKE,
	SOUNDS_LIKE,
	REGEXP,
	NOT_REGEXP,
	RLIKE,
	NOT_RLIKE,
	BETWEEN,
	NOT_BETWEEN,
	BOOLEAN_AND,
	BOOLEAN_AND2,
	BOOLEAN_XOR,
	BOOLEAN_OR,
	BOOLEAN_OR2,
	ASSIGN BinaryOperator
}

var MySqlBinaryOperators = o.NewEnum[BinaryOperator](_MySqlBinaryOperator{
	JSON_EXTRACT:                       BinaryOperator{nil, -1, "->", OperatorTypes.SPECIAL, SymbolTypes.PUNCTUATION, false},
	JSON_UNQUOTE:                       BinaryOperator{nil, -1, "->>", OperatorTypes.SPECIAL, SymbolTypes.PUNCTUATION, false},
	MEMBER_OF:                          BinaryOperator{nil, 0, "MEMBER OF", OperatorTypes.SPECIAL, SymbolTypes.IDENTIFIER, false},
	COLLATE:                            BinaryOperator{nil, 0, "COLLATE", OperatorTypes.SPECIAL, SymbolTypes.IDENTIFIER, false},
	BITWISE_XOR:                        BinaryOperator{nil, 1, "^", OperatorTypes.BITWISE, SymbolTypes.PUNCTUATION, false},
	MULTIPLY:                           BinaryOperator{nil, 2, "*", OperatorTypes.BITWISE, SymbolTypes.PUNCTUATION, false},
	DIVIDE:                             BinaryOperator{nil, 2, "/", OperatorTypes.BITWISE, SymbolTypes.PUNCTUATION, false},
	MODULUS:                            BinaryOperator{nil, 2, "%", OperatorTypes.BITWISE, SymbolTypes.PUNCTUATION, false},
	DIV:                                BinaryOperator{nil, 2, "DIV", OperatorTypes.BITWISE, SymbolTypes.IDENTIFIER, false},
	MOD:                                BinaryOperator{nil, 2, "MOD", OperatorTypes.BITWISE, SymbolTypes.IDENTIFIER, false},
	ADD:                                BinaryOperator{nil, 3, "+", OperatorTypes.BITWISE, SymbolTypes.PUNCTUATION, false},
	SUBTRACT:                           BinaryOperator{nil, 3, "-", OperatorTypes.BITWISE, SymbolTypes.PUNCTUATION, false},
	RIGHT_SHIFT:                        BinaryOperator{nil, 4, ">>", OperatorTypes.BITWISE, SymbolTypes.PUNCTUATION, false},
	LEFT_SHIFT:                         BinaryOperator{nil, 4, "<<", OperatorTypes.BITWISE, SymbolTypes.PUNCTUATION, false},
	BITWISE_AND:                        BinaryOperator{nil, 5, "&", OperatorTypes.BITWISE, SymbolTypes.PUNCTUATION, false},
	BITWISE_OR:                         BinaryOperator{nil, 6, "|", OperatorTypes.BITWISE, SymbolTypes.PUNCTUATION, false},
	EQUAL_OR_ASSIGNMENT:                BinaryOperator{nil, 7, "=", OperatorTypes.COMPARISON, SymbolTypes.PUNCTUATION, true},
	LESS_THAN_OR_EQUAL_OR_GREATER_THAN: BinaryOperator{nil, 7, "<=>", OperatorTypes.COMPARISON, SymbolTypes.PUNCTUATION, true},
	GREATER_THAN:                       BinaryOperator{nil, 7, ">", OperatorTypes.COMPARISON, SymbolTypes.PUNCTUATION, true},
	LESS_THAN:                          BinaryOperator{nil, 7, "<", OperatorTypes.COMPARISON, SymbolTypes.PUNCTUATION, true},
	GREATER_THAN_OR_EQUAL:              BinaryOperator{nil, 7, ">=", OperatorTypes.COMPARISON, SymbolTypes.PUNCTUATION, true},
	LESS_THAN_OR_EQUAL:                 BinaryOperator{nil, 7, "<=", OperatorTypes.COMPARISON, SymbolTypes.PUNCTUATION, true},
	LESS_THAN_OR_GREATER:               BinaryOperator{nil, 7, "<>", OperatorTypes.COMPARISON, SymbolTypes.PUNCTUATION, true},
	NOT_EQUAL:                          BinaryOperator{nil, 7, "!=", OperatorTypes.COMPARISON, SymbolTypes.PUNCTUATION, true},
	IN:                                 BinaryOperator{nil, 7, "IN", OperatorTypes.PREDICATE, SymbolTypes.IDENTIFIER, true},
	NOT_IN:                             BinaryOperator{nil, 7, "NOT IN", OperatorTypes.PREDICATE, SymbolTypes.IDENTIFIER, true},
	IS:                                 BinaryOperator{nil, 7, "IS", OperatorTypes.PREDICATE, SymbolTypes.IDENTIFIER, false},
	IS_NOT:                             BinaryOperator{nil, 7, "IS NOT", OperatorTypes.PREDICATE, SymbolTypes.IDENTIFIER, false},
	LIKE:                               BinaryOperator{nil, 7, "LIKE", OperatorTypes.PREDICATE, SymbolTypes.IDENTIFIER, false},
	NOT_LIKE:                           BinaryOperator{nil, 7, "NOT LIKE", OperatorTypes.PREDICATE, SymbolTypes.IDENTIFIER, false},
	SOUNDS_LIKE:                        BinaryOperator{nil, 7, "SOUNDS LIKE", OperatorTypes.PREDICATE, SymbolTypes.IDENTIFIER, false},
	REGEXP:                             BinaryOperator{nil, 7, "REGEXP", OperatorTypes.PREDICATE, SymbolTypes.IDENTIFIER, false},
	NOT_REGEXP:                         BinaryOperator{nil, 7, "NOT REGEXP", OperatorTypes.PREDICATE, SymbolTypes.IDENTIFIER, false},
	RLIKE:                              BinaryOperator{nil, 7, "RLIKE", OperatorTypes.PREDICATE, SymbolTypes.IDENTIFIER, false},
	NOT_RLIKE:                          BinaryOperator{nil, 7, "NOT RLIKE", OperatorTypes.PREDICATE, SymbolTypes.IDENTIFIER, false},
	BETWEEN:                            BinaryOperator{nil, 8, "BETWEEN", OperatorTypes.PREDICATE, SymbolTypes.IDENTIFIER, false},
	NOT_BETWEEN:                        BinaryOperator{nil, 8, "NOT BETWEEN", OperatorTypes.PREDICATE, SymbolTypes.IDENTIFIER, false},
	BOOLEAN_AND:                        BinaryOperator{nil, 9, "AND", OperatorTypes.LOGICAL, SymbolTypes.IDENTIFIER, false},
	BOOLEAN_AND2:                       BinaryOperator{nil, 9, "&&", OperatorTypes.LOGICAL, SymbolTypes.PUNCTUATION, false},
	BOOLEAN_XOR:                        BinaryOperator{nil, 10, "XOR", OperatorTypes.LOGICAL, SymbolTypes.IDENTIFIER, false},
	BOOLEAN_OR:                         BinaryOperator{nil, 11, "OR", OperatorTypes.LOGICAL, SymbolTypes.IDENTIFIER, false},
	BOOLEAN_OR2:                        BinaryOperator{nil, 11, "||", OperatorTypes.LOGICAL, SymbolTypes.PUNCTUATION, false},
	ASSIGN:                             BinaryOperator{nil, 12, ":=", OperatorTypes.ASSIGNMENT, SymbolTypes.PUNCTUATION, false},
})
